*project-root.txt*   For Vim version 7.4

Author: Ben Moon
License: GNU General Public License version 3 (or later)

=======================================================================
CONTENTS                                        *project-root-contents*

    1.Introduction......................|project-root|
    2.Options...........................|project-root-options|
    3.Project configuration.............|project-root-project-config|
    3.1.Adding new projects.............|project-root-adding-projects|
    3.2.Project attributes..............|project-root-project-attributes|
    4.Commands..........................|project-root-commands|
    5.About.............................|project-root-about|
    6.License...........................|project-root-license|

=======================================================================
1. Introduction                                          *project-root*

This plugin aims to make working with the root directory of projects
easier.

=======================================================================
2. Options                                       *project-root-options*

The following options can be used to customize project-root's
behavior. They should be set in your .vimrc.

|'loaded_project_root'|              Turns off the script.

|'project_root_pt_unknown_globs'|    Glob patterns for matching unknown
                                   project types.

|'project_root_search_method'|       Method to use when searching for
                                   files/directories.


|'b:project_root_directory'|         Project directory for the current
                                   buffer.

|'b:project_root_type'|              Project type for the current buffer.

-----------------------------------------------------------------------
                                                *'loaded_project_root'*

To prevent this plugin from loading, put the following in your .vimrc: >
    let loaded_project_root = 1

-----------------------------------------------------------------------
                                         *'project_root_search_method'*
Values: 1 or 2
Default: 1

Determines which search method project-root should use for finding
files and/or directories.

The default value (1) tells project-root to use a priority method.
With the priority method, glob patterns are given precedence based
on the order in which they occur.

For example, with the glob patterns: >
    ['.git', 'LICENSE', 'README']
the entire parent tree would first be searched for '.git', then >
failing to find that it would search for 'LICENSE', then 'README'.

The other possible option (2) is the 'first matching' method.
With this method, each glob is searched in each parent until ANY
of them matches.

-----------------------------------------------------------------------
                                         *'project_root_allow_unknown'*
Values: 0 or 1
Default: 1

When nonzero, will allow project-root to use the unknown project type
when the current project type fails to work for a particular function.

This is better explained with an example.

If, for example, you were working on a python project and had set >
    let g:project_root_pt_python_globs = ['setup.py']
so that project-root could detect common python projects. >

If you happen to be working on a project that hasn't yet created a
'setup.py' file, then project-root would have to default to using the
current directory (assuming 'project_root_allow_unknown' was zero).

If 'project_root_allow_unknown' was nonzero however, this would tell
project-root to attempt to use the unknown project type to determine
the project directory.

In this case, project-root would use the |'project_root_pt_unknown_globs'|
variable for finding the current project directory.

-----------------------------------------------------------------------
                                           *'b:project_root_directory'*
Values: String representing an absolute directory path.
Default: Determined by |'b:project_root_type'|.

Holds the path to the current project directory.

Many of project-root's actions are based upon the value of this
variable, |ProjectRootTest|, for example. Set this if you want
project-root to use a different project directory than the one it
detects.

-----------------------------------------------------------------------
                                                *'b:project_root_type'*
Values: String representing the current project type.
Default: Determined by the filetype (see below).

Holds the project type for the current buffer.

project-root will try and guess the project type based on the filetype
of the current buffer. If this isn't what you want, then set it
yourself in your .vimrc.

=======================================================================
3. Project configuration                  *project-root-project-config*

The |'project_root_pt'| variable contains the configuration for
existing project types.

-----------------------------------------------------------------------
3.1. Adding a new project type           *project-root-adding-projects*

Project skeletons can be defined as a dictionary, and then passed
to the proot#initialize_project function for basic setup.

Example: >
  let ruby_dict = {'root_globs': ['Rakefile']}

  call proot#initialize_project('ruby', ruby_dict)
>

-----------------------------------------------------------------------
3.2. Project attributes               *project-root-project-attributes*

Project attributes may be specified as keys in a dictionary which
can then be passed to proot#initialize_project. See
|project-root-adding-projects|.

The following summarizes the available project attributes:

----------
root_globs                                    *project-root-root_globs*

A list of glob patterns that are used to locate the root directory.

Example: For Ruby projects, there is often a Rakefile in the root
directory, thus >
    let project_root_pt['ruby']['root_globs'] = ["Rakefile"]
could be used to allow project-root to find Ruby root directories. >

----------
test_globs                                    *project-root-test_globs*

A list of glob patterns that are used to locate the test directory.

------------
source_globs                                *project-root-source_globs*

A list of glob patterns that are used to locate the source directory.

------------
test_command                                *project-root-test_command*

String representing a command that will run all the tests for the
current project when run in the root directory.

Example: For Ruby projects, a common setup is to have >
    rake test
run the tests for the current project. >

Thus running >
    let project_root_pt['ruby']['test_command'] = 'rake test'
would allow project-root to run tests for appropriate ruby projects. >


=======================================================================
4. Commands                                     *project-root-commands*

-----------------------------------------------------------------------
                                                      *ProjectRootTest*
Will attempt to run tests for the current project. See
|project-root-test_command|.


-----------------------------------------------------------------------
                                                *ProjectRootBrowseRoot*
Will open a directory browser in the root of the current project.
If |NERDTree| is installed, then it is used for the directory browser.
Otherwise |netrw| is used.

=======================================================================
5. About                                           *project-root-about*

project-root is written and maintained by GuiltyDolphin, whose contact
is GuiltyDolphin at gmail dot com.

The project is hosted on GitHub:
    https://www.github.com/GuiltyDolphin/project-root-vim

=======================================================================
6. License                                       *project-root-license*

project-root is licensed under the GNU General Public License version 3.


 vim:tw=78:ts=8:ft=help:norl:
